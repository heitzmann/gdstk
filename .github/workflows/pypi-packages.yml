name: Build & publish PyPI packages

on:
  push:
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels # check https://cibuildwheel.readthedocs.io/en/stable/setup/#github-actions
        uses: pypa/cibuildwheel@v2.12.0
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        # env:
        #   CIBW_BUILD: ${{ matrix.cibuild }}
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_manylinux_wheels:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 12
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip wheel oldest-supported-numpy
          python -m pip install conan ninja
          conan install zlib/1.2.13@ -s compiler.version=16 -g cmake_paths
      - name: Build Python ${{ matrix.python-version }} wheel
        run: |
          python setup.py bdist_wheel
        env:
          CMAKE_GENERATOR: "Ninja"
          CMAKE_TOOLCHAIN_FILE: "conan_paths.cmake"
      - uses: actions/upload-artifact@v3
        with:
          path: "dist/*.whl"

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Optional, use if you use setuptools_scm
          submodules: true # Optional, use if you have submodules

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_to_test_pypy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [make_sdist, build_wheels, build_windows_wheels, build_manylinux_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.4
        continue-on-error: true # might fail if we don't bump the version
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload_to_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [make_sdist, build_wheels, build_windows_wheels, build_manylinux_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
